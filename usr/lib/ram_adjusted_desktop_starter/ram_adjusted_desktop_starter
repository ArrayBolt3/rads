#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

## This script gets run by the /etc/profile.d/30_desktop.sh hook.

## Using this script and not directly using /etc/profile.d/30_desktop.sh
## because /etc/profile.d/30_desktop.sh gets sourced, so return would have to
## be used and exit would not be available (without stopping /etc/profile to
## source the /etc/profile.d/. Using this script has also the advantage, that
## /bin/bash's features can be used.

#set -x
set -o pipefail
set -o errtrace

error_handler_rads() {
   echo "[${red}${bold}ERROR${reset}] [RAM Adjusted Desktop Starter] \
ret: $? | BASH_COMMAND: $BASH_COMMAND | Please report this bug!"
}

trap "error_handler_rads" ERR

colors() {
## Thanks to:
## http://mywiki.wooledge.org/BashFAQ/037
## Variables for terminal requests.
[[ -t 2 ]] && {
    alt=$(      tput smcup  || tput ti      ) # Start alt display
    ealt=$(     tput rmcup  || tput te      ) # End   alt display
    hide=$(     tput civis  || tput vi      ) # Hide cursor
    show=$(     tput cnorm  || tput ve      ) # Show cursor
    save=$(     tput sc                     ) # Save cursor
    load=$(     tput rc                     ) # Load cursor
    bold=$(     tput bold   || tput md      ) # Start bold
    stout=$(    tput smso   || tput so      ) # Start stand-out
    estout=$(   tput rmso   || tput se      ) # End stand-out
    under=$(    tput smul   || tput us      ) # Start underline
    eunder=$(   tput rmul   || tput ue      ) # End   underline
    reset=$(    tput sgr0   || tput me      ) # Reset cursor
    blink=$(    tput blink  || tput mb      ) # Start blinking
    italic=$(   tput sitm   || tput ZH      ) # Start italic
    eitalic=$(  tput ritm   || tput ZR      ) # End   italic
[[ $TERM != *-m ]] && {
    red=$(      tput setaf 1|| tput AF 1    )
    green=$(    tput setaf 2|| tput AF 2    )
    yellow=$(   tput setaf 3|| tput AF 3    )
    blue=$(     tput setaf 4|| tput AF 4    )
    magenta=$(  tput setaf 5|| tput AF 5    )
    cyan=$(     tput setaf 6|| tput AF 6    )
}
    white=$(    tput setaf 7|| tput AF 7    )
    default=$(  tput op                     )
    eed=$(      tput ed     || tput cd      )   # Erase to end of display
    eel=$(      tput el     || tput ce      )   # Erase to end of line
    ebl=$(      tput el1    || tput cb      )   # Erase to beginning of line
    ewl=$eel$ebl                                # Erase whole line
    draw=$(     tput -S <<< '   enacs
                                smacs
                                acsc
                                rmacs' || { \
                tput eA; tput as;
                tput ac; tput ae;         } )   # Drawing characters
    back=$'\b'
} 2>/dev/null ||:
}

create_status_file_no_start_x() {
   mkdir --parents "/var/run/rads"
   touch "/var/run/rads/no_start_x.status"
   rm --force "/var/run/rads/start_x.status"
}

create_status_file_start_x() {
   mkdir --parents "/var/run/rads"
   rm --force "/var/run/rads/no_start_x.status"
   touch "/var/run/rads/start_x.status"
}

ram-adjusted-desktop-starter() {
   shopt -s nullglob
   local i
   for i in /etc/rads.d/*.conf; do
      bash -n "$i"
      source "$i"
   done

   ## Sanity Tests, Defaults, Debugging
   if [ -z "$rads_debug" ]; then
      rads_debug="0"
   fi
   if [ "$rads_debug" = "1" ]; then
      set -x
   fi
   if [ -z "$x_default_dm_config_file" ]; then
      x_default_dm_config_file="/etc/X11/default-display-manager"
   fi
   if [ -z "$rads_display_manager" ]; then
      if [ -f "$x_default_dm_config_file" ]; then
         rads_display_manager="$(basename "$(cat "$x_default_dm_config_file")")"
         if [ "$rads_display_manager" = "" ]; then
            rads_display_manager="kdm"
         fi
      else
         rads_no_x_default_dm="1"
      fi
   fi
   if [ -z "$rads_minium_ram" ]; then
      rads_minium_ram="500"
   fi
   if [ -z "$rads_start_display_manager" ]; then
      rads_start_display_manager="1"
   fi
   if [ -z "$rads_skip_ram_test" ]; then
      rads_skip_ram_test="0"
   fi
   if [ -z "$rads_wait" ]; then
      rads_wait="1"
   fi
   if [ -z "$rads_wait_seconds" ]; then
      rads_wait_seconds="10"
   fi
   if [ -z "$rads_autostart_decision_feature" ]; then
      rads_autostart_decision_feature="1"
   fi

   if [ ! "$rads_autostart_decision_feature" = "1" ]; then
      if [ "$rads_debug" = "1" ]; then
         true "INFO: [RAM Adjusted Desktop Starter] rads_autostart_decision_feature is not set to 1, doing nothing."
      fi
      exit 0
   fi

   ## {{ Expand PATH variable. Otherwise for example "/usr/sbin/lightdm" could
   ## not be detected below using "command -v".
   PATH_OLD="$PATH"
   PATH="$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
   export PATH
   ## }}

   command_v_exit_code="0"
   command -v "$rads_display_manager" >/dev/null || { command_v_exit_code="$?" ; true; };

   if [ ! "$command_v_exit_code" = "0" ]; then
      if [ "$rads_debug" = "1" ]; then
         true "INFO: [RAM Adjusted Desktop Starter] display manager \
$rads_display_manager configured in /etc/rads.d/ \
configuration folder does not exist. Not starting a desktop environment."
      fi
      create_status_file_no_start_x
      exit 0
   fi

   if [ "$rads_no_x_default_dm" = "1" ]; then
      if [ "$rads_debug" = "1" ]; then
         true "INFO: [RAM Adjusted Desktop Starter] config file \
$x_default_dm_config_file \
does not exist. Probably no desktop environment installed. Not starting a desktop environment."
      fi
      create_status_file_no_start_x
      exit 0
   fi

   service_1_exit_code="0"
   ## There is a /etc/sudoers.d/rads exception for this.
   sudo service "$rads_display_manager" status >/dev/null || { service_1_exit_code="$?" ; true; };

   if [ "$service_1_exit_code" = "0" ]; then
      if [ "$rads_debug" = "1" ]; then
         true "INFO: [RAM Adjusted Desktop Starter] \
Not starting $rads_display_manager, already running."
      fi
      exit 0
   fi

   ## Check how much RAM the system has in total.
   ## Thanks to:
   ## http://stackoverflow.com/a/10277712
   total_ram="$(free -m | sed  -n -e '/^Mem:/s/^[^0-9]*\([0-9]*\) .*/\1/p')"

   if [ "$rads_start_display_manager" = "0" ]; then
      if [ "$rads_debug" = "1" ]; then
         true "INFO: [RAM Adjusted Desktop Starter] \
rads_start_display_manager is set to 0 in /etc/rads.d/ \
configuration folder, not starting a desktop environment."
      fi
      create_status_file_no_start_x
      exit 0
   fi

   if [ ! "$rads_skip_ram_test" = "1" ]; then
      if [ "$total_ram" -lt "$rads_minium_ram" ]; then
         echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Not starting login manager \
(graphical desktop environment) ($rads_display_manager), \
because there is only $total_ram MB total RAM. (A minimum of \
$rads_minium_ram MB total RAM is configured in /etc/rads.d/ \
configuration folder.)"
         create_status_file_no_start_x
         exit 0
      fi
   fi

   if [ -e "/usr/share/anon-gw-base-files/gateway" ]; then
      ## Whonix specific info message. Feel free to implement your own.
      if [ -d "/usr/share/whonix" ]; then
         echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] If your \
host has little RAM, you are advised to reduce Gateway \
RAM to 128 MB. No graphical desktop environment will be started in that case. \
A Gateway without graphical desktop environment works as good as one with, \
it's just not that convenient. If you want, you can sometimes start a graphical \
desktop environment and sometimes only a terminal by toggling how much RAM is \
available to Gateway. Documentation about this feature can be found \
here: https://www.whonix.org/wiki/Desktop"
      fi
   fi

   ## Fallback.
   read_exit_code="0"
   if [ "$rads_wait" = "0" ]; then
      if [ "$rads_debug" = "1" ]; then
         true "INFO: Waiting feature disabled."
      fi
   else
      echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Starting login manager \
(graphical desktop environment) $rads_display_manager in \
$rads_wait_seconds seconds, unless you abort using ctrl + c. \
This can be disabled or configured in /etc/rads.d/ configuration folder."
      read -t "$rads_wait_seconds" read_input || { read_exit_code="$?" ; true; };
      ## read exits,
      ## 0: when enter has been pressed with or without input
      ## 142: on timeout
      ## 130: on ctrl + c
   fi

   if [ "$read_exit_code" = "0" ] || [ "$read_exit_code" = "142" ]; then
      service_2_exit_code="0"
      ## There is a /etc/sudoers.d/rads exception for this.
      sudo service "$rads_display_manager" status >/dev/null || { service_2_exit_code="$?" ; true; };

      if [ "$service_2_exit_code" = "0" ]; then
         echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] $rads_display_manager already running, not starting."
      else
         echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Trying to start login manager \
(graphical desktop environment) $rads_display_manager..."

         service_3_exit_code="0"
         ## There is a /etc/sudoers.d/rads exception for this.
         sudo service "$rads_display_manager" start || { service_3_exit_code="$?" ; true; };

         echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Starting login manager \
(graphical desktop environment) $rads_display_manager..."

         if [ "$service_3_exit_code" = "0" ]; then
            true "INFO: [RAM Adjusted Desktop Starter] Successfully started $rads_display_manager."
            create_status_file_start_x
         else
            echo "[${red}${bold}ERROR${reset}] [RAM Adjusted Desktop Starter] \
Could not start $rads_display_manager. Please report this bug!"
         fi
      fi
   else
      ## We will not boot into a graphical desktop environment.
      ## Make a new line so the ^C stands alone.
      echo ""
      echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Manually aborted start of login manager \
(graphical desktop environment) $rads_display_manager."
      echo "[${green}INFO${reset}] [RAM Adjusted Desktop Starter] Feel free to manually start a login manager \
(graphical desktop environment) later.
    sudo service $rads_display_manager start"

      create_status_file_no_start_x
      exit 0
   fi

   if [ "$rads_debug" = "1" ]; then
      true "INFO: End."
   fi
   exit 0
}

colors
ram-adjusted-desktop-starter
